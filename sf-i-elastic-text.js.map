{"version":3,"file":"sf-i-elastic-text.js","sourceRoot":"","sources":["src/sf-i-elastic-text.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAmB,MAAM,KAAK,CAAC;AAC5D,2FAA2F;AAC3F,OAAO,EAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AACjE,oEAAoE;AACpE,6BAA6B;AAC7B,6CAA6C;AAC7C,mDAAmD;AAGnD;;;;;EAKE;AAEF;;;;;;;;;;GAUG;AAEH,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAsO5C;QACE,KAAK,EAAE,CAAC;QAGV,aAAQ,GAAG,CAAE,GAAW,EAAE,CAAS,EAAE,eAAwB,EAAG,EAAE;YAChE,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;gBAAE,OAAO,GAAG,CAAC;aAAE;YACpC,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB;YAC1D,OAAO,CAAC,eAAe;gBACrB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAChD,CAAC,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;QAC9B,CAAC,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3D,IAAI,CAAC,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC7D,CAAC,CAAA;QAED,aAAQ,GAAG,GAAG,EAAE;YACb,IAAI,CAAC,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC1D,IAAI,CAAC,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9D,CAAC,CAAA;QAED,eAAU,GAAG,GAAG,EAAE;YAEhB,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gBACpC,IAAI,CAAC,UAA6B,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzD,IAAI,CAAC,aAA6B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aAC5D;iBAAM;gBACL,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,UAA6B,CAAC,SAAS,GAAG,IAAI,CAAC;aACtD;QAEH,CAAC,CAAA;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACpB,IAAI,CAAC,UAA6B,CAAC,SAAS,GAAG,IAAI,CAAC;QACvD,CAAC,CAAA;QAED,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAA;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAA;QAED,kBAAa,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,aAAmC,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACvE,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;YACF,IAAI,CAAC,aAAmC,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACvE,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAED,aAAQ,GAAG,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAA;IA3DD,CAAC;IA6DkB,YAAY,CAAC,kBAAqE;QAEnG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAElB,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAA;IAC3B,CAAC;IAEQ,MAAM;QAEb,OAAO,IAAI,CAAA;;;;8CAI+B,IAAI,CAAC,IAAI;;;;;KAKlD,CAAC;IACJ,CAAC;CAEF,CAAA;AArTiB,qBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgN1B,CAAA;AArNF;IADC,QAAQ,EAAE;4CACG;AAGd;IADC,QAAQ,EAAE;iDACQ;AAqNnB;IADC,KAAK,CAAC,kBAAkB,CAAC;mDACT;AAGjB;IADC,KAAK,CAAC,cAAc,CAAC;qDACH;AAGnB;IADC,KAAK,CAAC,cAAc,CAAC;qDACH;AAGnB;IADC,KAAK,CAAC,WAAW,CAAC;kDACH;AApOL,cAAc;IAD1B,aAAa,CAAC,mBAAmB,CAAC;GACtB,cAAc,CA6T1B;SA7TY,cAAc","sourcesContent":["/**\n * @license\n * Copyright 2022 Superflow.dev\n * SPDX-License-Identifier: MIT\n */\n\nimport {LitElement, html, css, PropertyValueMap} from 'lit';\n// import {customElement, query, queryAssignedElements, property} from 'lit/decorators.js';\nimport {customElement, query, property} from 'lit/decorators.js';\n// import {customElement, query, property} from 'lit/decorators.js';\n// import Util from './util';\n// import {LitElement, html, css} from 'lit';\n// import {customElement} from 'lit/decorators.js';\n\n\n/*\n\nModes: View, Add, Edit, Delete, Admin\nDB: partitionKey, rangeKey, values\n\n*/\n\n/**\n * SfIElasticText element.\n * @fires renderComplete - When the list is populated\n * @fires valueChanged - When the value is changed\n * @property apiId - backend api id\n * @property label - input label\n * @property name - name of the input\n * @property mode - mode of operation\n * @property selectedId - id to preselect\n * @property selectedValue - callback function\n */\n@customElement('sf-i-elastic-text')\nexport class SfIElasticText extends LitElement {\n  \n  @property()\n  text!: string;\n\n  @property()\n  minLength!: number;\n\n  static override styles = css`\n\n    \n    .SfIElasticTextC {\n    }\n\n    .flex-grow {\n      flex-grow: 1;\n    }\n\n    .left-sticky {\n      left: 0px;\n      position: sticky;\n    }\n\n    .color-lt-gray {\n      color: #999;\n      font-size: 95%;\n    }\n\n    .link {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n\n    .cursor {\n      cursor: pointer;\n    }\n\n    .gone {\n      display: none\n    }\n\n    .loader-element {\n      position: fixed;\n      right: 10px;\n      top: 10px;\n      margin-left: 5px;\n    }\n\n    .td-head {\n      text-transform: capitalize;\n    }\n\n    .td-body {\n      padding: 5px;\n    }\n\n    .td-dark {\n      background-color: #e9e9e9;\n    }\n\n    .td-highlight {\n      background-color: black;\n      color: white;\n    }\n\n    .td-light {\n      background-color: #f6f6f6;\n    }\n\n    td {\n      white-space: nowrap;\n    }\n\n    .align-start {\n      align-items: flex-start;\n    }\n\n    .align-end {\n      align-items: flex-end;\n    }\n\n    .align-center {\n      align-items: center;\n    }\n    \n    .lds-dual-ring {\n      display: inline-block;\n      width: 50px;\n      height: 50px;\n    }\n    .lds-dual-ring:after {\n      content: \" \";\n      display: block;\n      width: 50px;\n      height: 50px;\n      margin: 0px;\n      border-radius: 50%;\n      border: 2px solid #fff;\n      border-color: #888 #ddd #888 #ddd;\n      background-color: white;\n      animation: lds-dual-ring 0.8s linear infinite;\n    }\n\n    .lds-dual-ring-lg {\n      display: inline-block;\n      width: 30px;\n      height: 30px;\n    }\n    .lds-dual-ring-lg:after {\n      content: \" \";\n      display: block;\n      width: 30px;\n      height: 30px;\n      margin: 0px;\n      border-radius: 50%;\n      border: 3px solid #fff;\n      border-color: #888 #ddd #888 #ddd;\n      animation: lds-dual-ring 0.8s linear infinite;\n    }\n\n    .div-row-error {\n      display: flex;\n      justify-content: center;\n      position: fixed;\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      margin-top: 20px;\n      margin-right: 20px;\n      display: none;\n      align-items:center;\n      background-color: white;\n      border: dashed 1px red;\n      padding: 20px;\n    }\n\n    .div-row-error-message {\n      color: red;\n      padding: 5px;\n      background-color: white;\n      text-align: center;\n    }\n\n    .div-row-success {\n      display: flex;\n      justify-content: center;\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      margin-top: 20px;\n      margin-right: 20px;\n      display: none;\n      align-items:center;\n      background-color: white;\n      border: dashed 1px green;\n      padding: 20px;\n    }\n\n    .div-row-success-message {\n      color: green;\n      padding: 5px;\n      background-color: white;\n      text-align: center;\n    }\n\n    .d-flex {\n      display: flex;\n    }\n\n    .flex-col {\n      flex-direction: column;\n    }\n\n    .justify-center {\n      justify-content: center;\n    }\n\n    .justify-between {\n      justify-content: space-between;\n    }\n\n    .justify-end {\n      justify-content: flex-end;\n    }\n\n    @keyframes lds-dual-ring {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }  \n\n    .hide {\n      display: none;\n    }\n\n    .lb {\n      width: 5%\n    }\n    .rb {\n      width: 5%\n    }\n\n    @media (orientation: landscape) {\n\n      .lb {\n        width: 30%\n      }\n      .rb {\n        width: 30%\n      }\n\n    }\n\n  `;\n\n  @query('.SfIElasticTextC')\n  _SfIEventsC: any;\n\n  @query('#button-next')\n  _SfButtonNext: any;\n\n  @query('#button-prev')\n  _SfButtonPrev: any;\n\n  @query('#div-text')\n  _SfDivText: any;\n\n  constructor() {\n    super();\n  }\n\n  truncate = ( str: string, n: number, useWordBoundary: boolean ) => {\n    if (str.length <= n) { return str; }\n    const subString = str.slice(0, n-1); // the original check\n    return (useWordBoundary \n      ? subString.slice(0, subString.lastIndexOf(\" \")) \n      : subString) + \"&hellip;\";\n  };\n\n  showNext = () => {\n    (this._SfButtonNext as HTMLElement).style.display = 'block';\n    (this._SfButtonPrev as HTMLElement).style.display = 'none';\n  }\n\n  showPrev = () => {\n    (this._SfButtonNext as HTMLElement).style.display = 'none';\n    (this._SfButtonPrev as HTMLElement).style.display = 'block';\n  }\n\n  renderNext = () => {\n    \n    if(this.text.length <= this.minLength) {\n      (this._SfDivText as HTMLDivElement).innerHTML = this.text;\n      (this._SfButtonNext as HTMLElement).style.display = 'none';\n    } else {\n      var text = this.truncate(this.text, this.minLength, true);\n      (this._SfDivText as HTMLDivElement).innerHTML = text;\n    }\n    \n  }\n\n  renderPrev = () => {\n    var text = this.text;\n    (this._SfDivText as HTMLDivElement).innerHTML = text;\n  }\n\n  showTruncated = () => {\n    this.showNext();\n    this.renderNext();\n  }\n\n  showExpanded = () => {\n    this.showPrev();\n    this.renderPrev();\n  }\n\n  initListeners = () => {\n    (this._SfButtonNext as HTMLButtonElement).addEventListener('click', () => {\n      this.showExpanded();\n    });\n    (this._SfButtonPrev as HTMLButtonElement).addEventListener('click', () => {\n      this.showTruncated();\n    });\n  }\n\n  loadMode = async () => {\n    this.initListeners();\n    this.showTruncated();\n  }\n\n  protected override firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n\n    this.loadMode();\n\n  }\n  \n  override connectedCallback() {\n    super.connectedCallback()\n  }\n  \n  override render() {\n\n    return html`\n          \n      <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n      <div part=\"text-container\" class=\"SfIElasticTextC d-flex align-center\">\n        <div id=\"div-text\" part=\"text-view\">${this.text}</div>\n        <span part=\"text-next\" id=\"button-next\" class=\"material-icons cursor color-lt-gray\">chevron_right</span>\n        <span part=\"text-prev\" id=\"button-prev\" class=\"material-icons cursor color-lt-gray\">chevron_left</span>\n      </div>\n\n    `;\n  }\n\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'sf-i-elastic-text': SfIElasticText;\n  }\n}\n"]}